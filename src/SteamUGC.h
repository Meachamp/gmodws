
#pragma once
#include "steam_header.h"

class IUGC
{
public:
virtual void CreateQueryUserUGCRequest();
virtual void CreateQueryAllUGCRequest();
virtual void CreateQueryAllUGCRequest_1();
virtual void CreateQueryUGCDetailsRequest();
virtual void SendQueryUGCRequest();
virtual void GetQueryUGCResult();
virtual void GetQueryUGCNumTags();
virtual void GetQueryUGCTag();
virtual void GetQueryUGCTagDisplayName();
virtual void GetQueryUGCPreviewURL();
virtual void GetQueryUGCImageURL();
virtual void GetQueryUGCMetadata();
virtual void GetQueryUGCChildren();
virtual void GetQueryUGCStatistic();
virtual void GetQueryUGCNumAdditionalPreviews();
virtual void GetQueryUGCAdditionalPreview();
virtual void GetQueryUGCNumKeyValueTags();
virtual void GetQueryUGCKeyValueTag();
virtual void GetQueryUGCKeyValueTag_1();
virtual void GetQueryUGCContentDescriptors();
virtual void GetQueryUGCIsDepotBuild();
virtual void ReleaseQueryUGCRequest();
virtual void AddRequiredTag();
virtual void AddRequiredTagGroup();
virtual void AddExcludedTag();
virtual void SetReturnOnlyIDs();
virtual void SetReturnKeyValueTags();
virtual void SetReturnLongDescription();
virtual void SetReturnMetadata();
virtual void SetReturnChildren();
virtual void SetReturnAdditionalPreviews();
virtual void SetReturnTotalOnly();
virtual void SetReturnPlaytimeStats();
virtual void SetLanguage();
virtual void SetAllowCachedResponse();
virtual void SetCloudFileNameFilter();
virtual void SetMatchAnyTag();
virtual void SetSearchText();
virtual void SetRankedByTrendDays();
virtual void SetTimeCreatedDateRange();
virtual void SetTimeUpdatedDateRange();
virtual void AddRequiredKeyValueTag();
virtual void RequestUGCDetails();
virtual void CreateItem();
virtual unsigned long long StartItemUpdate(unsigned int,unsigned long long);
virtual void SetItemTitle();
virtual void SetItemDescription();
virtual void SetItemUpdateLanguage();
virtual void SetItemMetadata();
virtual void SetItemVisibility(unsigned long long,int);
virtual bool SetItemTags(unsigned long long,SteamParamStringArray_t const*);
virtual void SetItemContent(unsigned long long,char const*);
virtual void SetItemPreview();
virtual void SetAllowLegacyUpload();
virtual void RemoveAllItemKeyValueTags();
virtual void RemoveItemKeyValueTags();
virtual void AddItemKeyValueTag();
virtual void AddItemPreviewFile();
virtual void AddItemPreviewVideo();
virtual void UpdateItemPreviewFile();
virtual void UpdateItemPreviewVideo();
virtual void RemoveItemPreview();
virtual void AddContentDescriptor();
virtual void RemoveContentDescriptor();
virtual unsigned long long SubmitItemUpdate(unsigned long long,char const*);
virtual void GetItemUpdateProgress(unsigned long long,unsigned long long *,unsigned long long *);
virtual void SetUserItemVote();
virtual void GetUserItemVote();
virtual void AddItemToFavorites();
virtual void RemoveItemFromFavorites();
virtual void SubscribeItem();
virtual void UnsubscribeItem();
virtual void GetNumSubscribedItems();
virtual void GetSubscribedItems();
virtual void GetItemState();
virtual void GetItemInstallInfo();
virtual void GetItemDownloadInfo();
virtual void DownloadItem();
virtual void GetAppItemsStatus();
virtual void BInitWorkshopForGameServer();
virtual void SuspendDownloads();
virtual void GetAllItemsSizeOnDisk();
virtual void StartPlaytimeTracking();
virtual void StopPlaytimeTracking();
virtual void StopPlaytimeTrackingForAllItems();
virtual void AddDependency();
virtual void RemoveDependency();
virtual void AddAppDependency();
virtual void RemoveAppDependency();
virtual void GetAppDependencies();
virtual void DeleteItem();
virtual void ShowWorkshopEULA();
virtual void GetWorkshopEULAStatus();
virtual void GetUserContentDescriptorPreferences();
virtual void GetNumDownloadedItems();
virtual void GetDownloadedItems();
virtual void GetFullQueryUGCResponse();
virtual void GetSerializedQueryUGCResponse();
};