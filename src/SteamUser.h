
class CSteamID {
public:
		long long m_unAll64Bits;
};


class SteamUser
{
public:
virtual void pad0();
virtual void LogOn(CSteamID);
virtual void InvalidateCredentials();
virtual void LogOff();
virtual void BLoggedOn();
virtual void GetLogonState();
virtual void BConnected();
virtual void BInitiateReconnect();
virtual void EConnect();
virtual void BTryingToLogin();
virtual CSteamID GetSteamID(void);
virtual void GetConsoleSteamID();
virtual void GetClientInstanceID();
virtual void GetUserCountry();
virtual void IsVACBanned();
virtual void SetEmail();
virtual void SetConfigString();
virtual void GetConfigString();
virtual void SetConfigInt();
virtual void GetConfigInt();
virtual void SetConfigBinaryBlob();
virtual void GetConfigBinaryBlob();
virtual void DeleteConfigKey();
virtual void GetConfigStoreKeyName();
virtual void InitiateGameConnection();
virtual void InitiateGameConnectionOld();
virtual void TerminateGameConnection();
virtual void TerminateGame();
virtual void SetSelfAsChatDestination();
virtual void IsPrimaryChatDestination();
virtual void RequestLegacyCDKey();
virtual void AckGuestPass();
virtual void RedeemGuestPass();
virtual void GetGuestPassToGiveCount();
virtual void GetGuestPassToRedeemCount();
virtual void GetGuestPassToGiveInfo();
virtual void GetGuestPassToGiveOut();
virtual void GetGuestPassToRedeem();
virtual void GetGuestPassToRedeemInfo();
virtual void GetGuestPassToRedeemSenderName();
virtual void GetNumAppsInGuestPassesToRedeem();
virtual void GetAppsInGuestPassesToRedeem();
virtual void GetCountUserNotifications();
virtual void GetCountUserNotification();
virtual void RequestStoreAuthURL();
virtual void SetLanguage();
virtual void TrackAppUsageEvent();
virtual void RaiseConnectionPriority(int, int);
virtual void ResetConnectionPriority();
virtual void GetDesiredNetQOSLevel();
virtual void BHasCachedCredentials();
virtual int SetAccountNameForCachedCredentialLogin(char const*,bool);
virtual void DestroyCachedCredentials();
virtual void GetCurrentWebAuthToken();
virtual void RequestWebAuthToken();
virtual void SetLoginInformation(char const*,char const*,bool);
virtual void SetTwoFactorCode(const char* code);
virtual void SetLoginToken();
virtual void GetLoginTokenID();
virtual void ClearAllLoginInformation();
virtual void BEnableEmbeddedClient();
virtual void ResetEmbeddedClient();
virtual void BHasEmbeddedClientToken();
virtual void RequestEmbeddedClientToken();
virtual void AuthorizeNewDevice();
virtual void GetLanguage();
virtual void TrackSteamUsageEvent();
virtual void SetComputerInUse();
virtual void BIsGameRunning();
virtual void BIsGameWindowReady();
virtual void BUpdateAppOwnershipTicket();
virtual void GetCustomBinariesState();
virtual void RequestCustomBinaries();
virtual void SetCellID();
virtual void GetCellList();
virtual void GetUserBaseFolder();
virtual void GetUserDataFolder();
virtual void GetUserConfigFolder();
virtual void GetAccountName();
virtual void GetAccountName_1();
virtual void IsPasswordRemembered();
virtual void CheckoutSiteLicenseSeat();
virtual void GetAvailableSeats();
virtual void GetAssociatedSiteName();
virtual void BIsRunningInCafe();
virtual void BAllowCachedCredentialsInCafe();
virtual void RequiresLegacyCDKey();
virtual void GetLegacyCDKey();
virtual void SetLegacyCDKey();
virtual void WriteLegacyCDKey();
virtual void RemoveLegacyCDKey();
virtual void RequestLegacyCDKeyFromApp();
virtual void BIsAnyGameRunning();
virtual void GetSteamGuardDetails();
virtual void GetSentryFileData();
virtual void GetTwoFactorDetails();
virtual void BHasTwoFactor();
virtual void GetEmail();
virtual void Test_FakeConnectionTimeout();
virtual void RunInstallScript();
virtual void IsInstallScriptRunning();
virtual void GetInstallScriptState();
virtual void StopInstallScript();
virtual void SpawnProcess();
virtual void GetAppOwnershipTicketLength();
virtual void GetAppOwnershipTicketData();
virtual void GetAppOwnershipTicketExtendedData();
virtual void GetMarketingMessageCount();
virtual void GetMarketingMessage();
virtual void MarkMarketingMessageSeen();
virtual void CheckForPendingMarketingMessages();
virtual void GetAuthSessionTicket();
virtual void GetAuthSessionTicketV2();
virtual void GetAuthSessionTicketV3();
virtual void GetAuthTicketForWebApi();
virtual void GetAuthSessionTicketForGameID();
virtual void BeginAuthSession();
virtual void EndAuthSession();
virtual void CancelAuthTicket();
virtual void IsUserSubscribedAppInTicket();
virtual void AdvertiseGame();
virtual void RequestEncryptedAppTicket();
virtual void GetEncryptedAppTicket();
virtual void GetGameBadgeLevel();
virtual void GetPlayerSteamLevel();
virtual void SetAccountLimited();
virtual void BIsAccountLimited();
virtual void SetAccountCommunityBanned();
virtual void BIsAccountCommunityBanned();
virtual void SetLimitedAccountCanInviteFriends();
virtual void BLimitedAccountCanInviteFriends();
virtual void SendValidationEmail();
virtual void BGameConnectTokensAvailable();
virtual void NumGamesRunning();
virtual void GetRunningGameID();
virtual void GetRunningGamePID();
virtual void RaiseWindowForGame();
virtual void GetAccountSecurityPolicyFlags();
virtual void SetClientStat();
virtual void VerifyPassword();
virtual void BSupportUser();
virtual void BNeedsSSANextSteamLogon();
virtual void ClearNeedsSSANextSteamLogon();
virtual void BIsAppOverlayEnabled();
virtual void BOverlayIgnoreChildProcesses();
virtual void SetOverlayState();
virtual void NotifyOverlaySettingsChanged();
virtual void BIsBehindNAT();
virtual void GetMicroTxnAppID();
virtual void GetMicroTxnOrderID();
virtual void BGetMicroTxnPrice();
virtual void GetMicroTxnSteamRealm();
virtual void GetMicroTxnLineItemCount();
virtual void BGetMicroTxnLineItem();
virtual void BIsSandboxMicroTxn();
virtual void BMicroTxnRequiresCachedPmtMethod();
virtual void AuthorizeMicroTxn();
virtual void BGetWalletBalance();
virtual void RequestMicroTxnInfo();
virtual void BMicroTxnRefundable();
virtual void BGetAppMinutesPlayed();
virtual void GetAppLastPlayedTime();
virtual void GetAppUpdateDisabledSecondsRemaining();
virtual void BGetGuideURL();
virtual void BPromptToChangePassword();
virtual void BAccountExtraSecurity();
virtual void BAccountShouldShowLockUI();
virtual void GetCountAuthedComputers();
virtual void GetSteamGuardEnabledTime();
virtual void SetPhoneIsVerified();
virtual void BIsPhoneVerified();
virtual void SetPhoneIsIdentifying();
virtual void BIsPhoneIdentifying();
virtual void SetPhoneIsRequiringVerification();
virtual void BIsPhoneRequiringVerification();
virtual void Set2ndFactorAuthCode(const char*, bool);
virtual void SetUserMachineName();
virtual void GetUserMachineName();
virtual void GetEmailDomainFromLogonFailure();
virtual void GetAgreementSessionUrl();
virtual void GetDurationControl();
virtual void GetDurationControlForApp();
virtual void BSetDurationControlOnlineState();
virtual void BSetDurationControlOnlineStateForApp();
virtual void BGetDurationControlExtendedResults();
virtual void BIsSubscribedApp();
virtual void GetSubscribedApps();
virtual void AckSystemIM();
virtual void RequestSpecialSurvey();
virtual void SendSpecialSurveyResponse();
virtual void RequestNotifications();
virtual void GetAppOwnershipInfo();
virtual void SendGameWebCallback();
virtual void BIsStreamingUIToRemoteDevice();
virtual void BIsCurrentlyNVStreaming();
virtual void OnBigPictureForStreamingStartResult();
virtual void OnBigPictureForStreamingDone();
virtual void OnBigPictureForStreamingRestarting();
virtual void StopStreaming();
virtual void LockParentalLock();
virtual void UnlockParentalLock();
virtual void BIsParentalLockEnabled();
virtual void BIsParentalLockLocked();
virtual void BlockApp();
virtual void UnblockApp();
virtual void BIsAppBlocked();
virtual void BIsAppInBlockList();
virtual void BlockFeature();
virtual void UnblockFeature();
virtual void BIsFeatureBlocked();
virtual void BIsFeatureInBlockList();
virtual void GetParentalUnlockTime();
virtual void BGetRecoveryEmail();
virtual void RequestParentalRecoveryEmail();
virtual void BIsLockFromSiteLicense();
virtual void EIsParentalPlaytimeBlocked();
virtual void BGetSerializedParentalSettings();
virtual void BSetParentalSettings();
virtual void BDisableParentalSettings();
virtual void BGetParentalWebToken();
virtual void GetCommunityPreference();
virtual void SetCommunityPreference();
virtual void GetTextFilterSetting();
virtual void BTextFilterIgnoresFriends();
virtual void CanLogonOffline();
virtual void LogOnOffline();
virtual void ValidateOfflineLogonTicket();
virtual void BGetOfflineLogonTicket();
virtual void UploadLocalClientLogs();
virtual void SetAsyncNotificationEnabled();
virtual void BIsOtherSessionPlaying();
virtual void BKickOtherPlayingSession();
virtual void BIsAccountLockedDown();
virtual void ClearAndSetAppTags();
virtual void RemoveAppTag();
virtual void AddAppTag();
virtual void ClearAppTags();
virtual void SetAppHidden();
virtual void RequestAccountLinkInfo();
virtual void RequestSurveySchedule();
virtual void RequestNewSteamAnnouncementState();
virtual void UpdateSteamAnnouncementLastRead();
virtual void GetMarketEligibility();
virtual void UpdateGameVrDllState();
virtual void KillVRTheaterPancakeGame();
virtual void BIsAnyGameOrServiceAppRunning();
virtual void BGetAppPlaytimeMap();
virtual void BGetAppsLastPlayedMap();
virtual void BGetAppTagsMap();
virtual void SendSteamServiceStatusUpdate();
virtual void RequestSteamGroupChatMessageNotifications();
virtual void RequestSteamGroupChatMessageHistory();
virtual void RequestSendSteamGroupChatMessage();
virtual void OnNewGroupChatMsgAdded();
virtual void OnGroupChatUserStateChange();
virtual void OnReceivedGroupChatSubscriptionResponse();
virtual void GetTimedTrialStatus();
virtual void RequestTimedTrialStatus();
virtual void PrepareForSystemSuspend();
virtual void ResumeSuspendedGames();
virtual void GetClientInstallationID();
virtual void Test_SetClientInstallationID();
virtual void GetAppIDForGameID();
virtual void BDoNotDisturb();
virtual void SetAdditionalClientArgData();
};